import { ethers } from "hardhat";
import { addressBook } from "blockchain-addressbook";

async function main() {
    const {
        tokens: {
            MATIC: { address: MATIC },
            pUSDCe: { address: pUSDCe },
        },
    } = addressBook.polygon;

    // Define the ABI of your SimpleSwapper contract
    const simpleSwapperABI = [
        "function setSwapInfo(address fromToken, address toToken, (address router, bytes data, uint256 amountIndex) swapInfo) external",
    ];

    // Address of your SimpleSwapper contract
    const simpleSwapperAddress = "0x2604039c6FE27b514408dB247de3a1d8BE461372";

    // Create contract instance
    const simpleSwapperContract = await ethers.getContractAt(simpleSwapperABI, simpleSwapperAddress);

    // Define your transaction data
    const routerAddress = "0xF0d4c12A5768D806021F80a262B4d39d26C58b8D";  // Replace with the actual router address

    // The data needs to be in hex format and should include the function selector and encoded parameters
    const data = "0x5c9c18e2" +
        "0000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270" +
        "0000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270" +
        "000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee" +
        "0000000000000000000000003d8eadb739d1ef95dd53d718e4810721837c69c1" +
        "0000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa84174" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000008" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000002" +
        "0000000000000000000000000000000000000000000000000000000000000003" +
        "0000000000000000000000000000000000000000000000000000000000000002" +
        "0000000000000000000000000000000000000000000000000000000000000006" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000de0b6b3a7640000" +
        "000000000000000000000000000000000000000000000000000000000009daca" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000007bbc0e92505b485aeb3e82e828cb505daf1e50c6" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000" +
        "0000000000000000000000000000000000000000000000000000000000000000";

    const amountIndex = 1156; // Example index where the _amountIn value will be inserted

    // Define fromToken and toToken addresses
    const fromToken = MATIC;
    const toToken = pUSDCe;

    // Create SwapInfo struct
    const swapInfo = {
        router: routerAddress,
        data: data,
        amountIndex: amountIndex
    };

    try {
        // Send transaction to set swap info
        const tx = await simpleSwapperContract.setSwapInfo(fromToken, toToken, swapInfo);
        console.log("Transaction hash:", tx.hash);

        // Wait for the transaction to be mined
        await tx.wait();
        console.log("Swap info set successfully.");
    } catch (error) {
        console.error("Error setting swap info:", error);
    }
}

// Execute the main function
main().catch((error) => {
    console.error(error);
    process.exitCode = 1;
});